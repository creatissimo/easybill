<?php
/**
 * Customer
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * easybill REST API
 *
 * The first version of the easybill REST API. [CHANGELOG](https://api.easybill.de/rest/v1/CHANGELOG.md)  ## Authentication  You can choose between two available methods: `Basic Auth` or `Bearer Token`.  In each HTTP request, one of the following HTTP headers is required:  ``` # Basic Auth Authorization: Basic base64_encode('<email>:<api_key>') # Bearer Token Authorization: Bearer <api_key> ```  ## Limitations  ### Request Limit  * PLUS: 10 requests per minute * BUSINESS: 60 requests per minute  If the limit is exceeded, you will receive the HTTP error: `429 Too Many Requests`  ### Result Limit  All result lists are limited to 100 by default. This limit can be increased by the query parameter `limit` to a maximum of 1000.  ## Query filter  Many list resources can be filtered. In `/documents` you can filter e.g. by number with `/documents?number=111028654`. If you want to filter multiple numbers, you can either enter them separated by commas `/documents?number=111028654,222006895` or as an array  `/documents?number[]=111028654&number[]=222006895`.  **Warning**: The maximum size of an HTTP request line in bytes is 4094. If this limit is exceeded, you will receive the HTTP error: `414 Request-URI Too Large`  ### Escape commas in query  You can escape commans in query `name=Patrick\\, Peter` if you submit the header `X-Easybill-Escape: true` in your request.  ## Property login_id  This is the login of your admin or employee account.  ## Date and Date-Time format  * **date** = *Y-m-d* = `2016-12-31` * **date-time** = *Y-m-d H:i:s* = `2016-12-31 03:13:37`
 *
 * OpenAPI spec version: 1.12.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;

/**
 * Customer Class Doc Comment
 *
 * @category    Class
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Customer implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Customer';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'acquire_options' => 'int',
        'bank_account' => 'string',
        'bank_account_owner' => 'string',
        'bank_bic' => 'string',
        'bank_code' => 'string',
        'bank_iban' => 'string',
        'bank_name' => 'string',
        'birth_date' => '\DateTime',
        'cash_allowance' => 'float',
        'cash_allowance_days' => 'int',
        'cash_discount' => 'float',
        'cash_discount_type' => 'string',
        'city' => 'string',
        'company_name' => 'string',
        'country' => 'string',
        'created_at' => '\DateTime',
        'delivery_city' => 'string',
        'delivery_company_name' => 'string',
        'delivery_country' => 'string',
        'delivery_first_name' => 'string',
        'delivery_last_name' => 'string',
        'delivery_personal' => 'bool',
        'delivery_salutation' => 'int',
        'delivery_street' => 'string',
        'delivery_suffix_1' => 'string',
        'delivery_suffix_2' => 'string',
        'delivery_zip_code' => 'string',
        'emails' => 'string[]',
        'fax' => 'string',
        'first_name' => 'string',
        'grace_period' => 'string',
        'group_id' => 'int',
        'id' => 'int',
        'info_1' => 'string',
        'info_2' => 'string',
        'internet' => 'string',
        'last_name' => 'string',
        'login_id' => 'int',
        'mobile' => 'string',
        'note' => 'string',
        'number' => 'string',
        'payment_options' => 'int',
        'personal' => 'bool',
        'phone_1' => 'string',
        'phone_2' => 'string',
        'postbox' => 'string',
        'postbox_city' => 'string',
        'postbox_country' => 'string',
        'postbox_zip_code' => 'string',
        'sale_price_level' => 'string',
        'salutation' => 'int',
        'sepa_agreement' => 'string',
        'sepa_agreement_date' => '\DateTime',
        'sepa_mandate_reference' => 'string',
        'since_date' => '\DateTime',
        'street' => 'string',
        'suffix_1' => 'string',
        'suffix_2' => 'string',
        'tax_number' => 'string',
        'tax_options' => 'string',
        'title' => 'string',
        'vat_identifier' => 'string',
        'zip_code' => 'string'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'acquire_options' => 'acquire_options',
        'bank_account' => 'bank_account',
        'bank_account_owner' => 'bank_account_owner',
        'bank_bic' => 'bank_bic',
        'bank_code' => 'bank_code',
        'bank_iban' => 'bank_iban',
        'bank_name' => 'bank_name',
        'birth_date' => 'birth_date',
        'cash_allowance' => 'cash_allowance',
        'cash_allowance_days' => 'cash_allowance_days',
        'cash_discount' => 'cash_discount',
        'cash_discount_type' => 'cash_discount_type',
        'city' => 'city',
        'company_name' => 'company_name',
        'country' => 'country',
        'created_at' => 'created_at',
        'delivery_city' => 'delivery_city',
        'delivery_company_name' => 'delivery_company_name',
        'delivery_country' => 'delivery_country',
        'delivery_first_name' => 'delivery_first_name',
        'delivery_last_name' => 'delivery_last_name',
        'delivery_personal' => 'delivery_personal',
        'delivery_salutation' => 'delivery_salutation',
        'delivery_street' => 'delivery_street',
        'delivery_suffix_1' => 'delivery_suffix_1',
        'delivery_suffix_2' => 'delivery_suffix_2',
        'delivery_zip_code' => 'delivery_zip_code',
        'emails' => 'emails',
        'fax' => 'fax',
        'first_name' => 'first_name',
        'grace_period' => 'grace_period',
        'group_id' => 'group_id',
        'id' => 'id',
        'info_1' => 'info_1',
        'info_2' => 'info_2',
        'internet' => 'internet',
        'last_name' => 'last_name',
        'login_id' => 'login_id',
        'mobile' => 'mobile',
        'note' => 'note',
        'number' => 'number',
        'payment_options' => 'payment_options',
        'personal' => 'personal',
        'phone_1' => 'phone_1',
        'phone_2' => 'phone_2',
        'postbox' => 'postbox',
        'postbox_city' => 'postbox_city',
        'postbox_country' => 'postbox_country',
        'postbox_zip_code' => 'postbox_zip_code',
        'sale_price_level' => 'sale_price_level',
        'salutation' => 'salutation',
        'sepa_agreement' => 'sepa_agreement',
        'sepa_agreement_date' => 'sepa_agreement_date',
        'sepa_mandate_reference' => 'sepa_mandate_reference',
        'since_date' => 'since_date',
        'street' => 'street',
        'suffix_1' => 'suffix_1',
        'suffix_2' => 'suffix_2',
        'tax_number' => 'tax_number',
        'tax_options' => 'tax_options',
        'title' => 'title',
        'vat_identifier' => 'vat_identifier',
        'zip_code' => 'zip_code'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'acquire_options' => 'setAcquireOptions',
        'bank_account' => 'setBankAccount',
        'bank_account_owner' => 'setBankAccountOwner',
        'bank_bic' => 'setBankBic',
        'bank_code' => 'setBankCode',
        'bank_iban' => 'setBankIban',
        'bank_name' => 'setBankName',
        'birth_date' => 'setBirthDate',
        'cash_allowance' => 'setCashAllowance',
        'cash_allowance_days' => 'setCashAllowanceDays',
        'cash_discount' => 'setCashDiscount',
        'cash_discount_type' => 'setCashDiscountType',
        'city' => 'setCity',
        'company_name' => 'setCompanyName',
        'country' => 'setCountry',
        'created_at' => 'setCreatedAt',
        'delivery_city' => 'setDeliveryCity',
        'delivery_company_name' => 'setDeliveryCompanyName',
        'delivery_country' => 'setDeliveryCountry',
        'delivery_first_name' => 'setDeliveryFirstName',
        'delivery_last_name' => 'setDeliveryLastName',
        'delivery_personal' => 'setDeliveryPersonal',
        'delivery_salutation' => 'setDeliverySalutation',
        'delivery_street' => 'setDeliveryStreet',
        'delivery_suffix_1' => 'setDeliverySuffix1',
        'delivery_suffix_2' => 'setDeliverySuffix2',
        'delivery_zip_code' => 'setDeliveryZipCode',
        'emails' => 'setEmails',
        'fax' => 'setFax',
        'first_name' => 'setFirstName',
        'grace_period' => 'setGracePeriod',
        'group_id' => 'setGroupId',
        'id' => 'setId',
        'info_1' => 'setInfo1',
        'info_2' => 'setInfo2',
        'internet' => 'setInternet',
        'last_name' => 'setLastName',
        'login_id' => 'setLoginId',
        'mobile' => 'setMobile',
        'note' => 'setNote',
        'number' => 'setNumber',
        'payment_options' => 'setPaymentOptions',
        'personal' => 'setPersonal',
        'phone_1' => 'setPhone1',
        'phone_2' => 'setPhone2',
        'postbox' => 'setPostbox',
        'postbox_city' => 'setPostboxCity',
        'postbox_country' => 'setPostboxCountry',
        'postbox_zip_code' => 'setPostboxZipCode',
        'sale_price_level' => 'setSalePriceLevel',
        'salutation' => 'setSalutation',
        'sepa_agreement' => 'setSepaAgreement',
        'sepa_agreement_date' => 'setSepaAgreementDate',
        'sepa_mandate_reference' => 'setSepaMandateReference',
        'since_date' => 'setSinceDate',
        'street' => 'setStreet',
        'suffix_1' => 'setSuffix1',
        'suffix_2' => 'setSuffix2',
        'tax_number' => 'setTaxNumber',
        'tax_options' => 'setTaxOptions',
        'title' => 'setTitle',
        'vat_identifier' => 'setVatIdentifier',
        'zip_code' => 'setZipCode'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'acquire_options' => 'getAcquireOptions',
        'bank_account' => 'getBankAccount',
        'bank_account_owner' => 'getBankAccountOwner',
        'bank_bic' => 'getBankBic',
        'bank_code' => 'getBankCode',
        'bank_iban' => 'getBankIban',
        'bank_name' => 'getBankName',
        'birth_date' => 'getBirthDate',
        'cash_allowance' => 'getCashAllowance',
        'cash_allowance_days' => 'getCashAllowanceDays',
        'cash_discount' => 'getCashDiscount',
        'cash_discount_type' => 'getCashDiscountType',
        'city' => 'getCity',
        'company_name' => 'getCompanyName',
        'country' => 'getCountry',
        'created_at' => 'getCreatedAt',
        'delivery_city' => 'getDeliveryCity',
        'delivery_company_name' => 'getDeliveryCompanyName',
        'delivery_country' => 'getDeliveryCountry',
        'delivery_first_name' => 'getDeliveryFirstName',
        'delivery_last_name' => 'getDeliveryLastName',
        'delivery_personal' => 'getDeliveryPersonal',
        'delivery_salutation' => 'getDeliverySalutation',
        'delivery_street' => 'getDeliveryStreet',
        'delivery_suffix_1' => 'getDeliverySuffix1',
        'delivery_suffix_2' => 'getDeliverySuffix2',
        'delivery_zip_code' => 'getDeliveryZipCode',
        'emails' => 'getEmails',
        'fax' => 'getFax',
        'first_name' => 'getFirstName',
        'grace_period' => 'getGracePeriod',
        'group_id' => 'getGroupId',
        'id' => 'getId',
        'info_1' => 'getInfo1',
        'info_2' => 'getInfo2',
        'internet' => 'getInternet',
        'last_name' => 'getLastName',
        'login_id' => 'getLoginId',
        'mobile' => 'getMobile',
        'note' => 'getNote',
        'number' => 'getNumber',
        'payment_options' => 'getPaymentOptions',
        'personal' => 'getPersonal',
        'phone_1' => 'getPhone1',
        'phone_2' => 'getPhone2',
        'postbox' => 'getPostbox',
        'postbox_city' => 'getPostboxCity',
        'postbox_country' => 'getPostboxCountry',
        'postbox_zip_code' => 'getPostboxZipCode',
        'sale_price_level' => 'getSalePriceLevel',
        'salutation' => 'getSalutation',
        'sepa_agreement' => 'getSepaAgreement',
        'sepa_agreement_date' => 'getSepaAgreementDate',
        'sepa_mandate_reference' => 'getSepaMandateReference',
        'since_date' => 'getSinceDate',
        'street' => 'getStreet',
        'suffix_1' => 'getSuffix1',
        'suffix_2' => 'getSuffix2',
        'tax_number' => 'getTaxNumber',
        'tax_options' => 'getTaxOptions',
        'title' => 'getTitle',
        'vat_identifier' => 'getVatIdentifier',
        'zip_code' => 'getZipCode'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    const CASH_DISCOUNT_TYPE_PERCENT = 'PERCENT';
    const CASH_DISCOUNT_TYPE_AMOUNT = 'AMOUNT';
    const SEPA_AGREEMENT_BASIC = 'BASIC';
    const SEPA_AGREEMENT_COR1 = 'COR1';
    const SEPA_AGREEMENT_COMPANY = 'COMPANY';
    const SEPA_AGREEMENT_NULL = 'NULL';
    const TAX_OPTIONS_N_STB = 'nStb';
    const TAX_OPTIONS_N_STB_UST_ID = 'nStbUstID';
    const TAX_OPTIONS_N_STB_NONE_UST_ID = 'nStbNoneUstID';
    const TAX_OPTIONS_N_STB_IM = 'nStbIm';
    const TAX_OPTIONS_REVC = 'revc';
    const TAX_OPTIONS_IG = 'IG';
    const TAX_OPTIONS_AL = 'AL';
    const TAX_OPTIONS_S_STFR = 'sStfr';
    const TAX_OPTIONS_NULL = 'NULL';
    

    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getCashDiscountTypeAllowableValues()
    {
        return [
            self::CASH_DISCOUNT_TYPE_PERCENT,
            self::CASH_DISCOUNT_TYPE_AMOUNT,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getSepaAgreementAllowableValues()
    {
        return [
            self::SEPA_AGREEMENT_BASIC,
            self::SEPA_AGREEMENT_COR1,
            self::SEPA_AGREEMENT_COMPANY,
            self::SEPA_AGREEMENT_NULL,
        ];
    }
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public function getTaxOptionsAllowableValues()
    {
        return [
            self::TAX_OPTIONS_N_STB,
            self::TAX_OPTIONS_N_STB_UST_ID,
            self::TAX_OPTIONS_N_STB_NONE_UST_ID,
            self::TAX_OPTIONS_N_STB_IM,
            self::TAX_OPTIONS_REVC,
            self::TAX_OPTIONS_IG,
            self::TAX_OPTIONS_AL,
            self::TAX_OPTIONS_S_STFR,
            self::TAX_OPTIONS_NULL,
        ];
    }
    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['acquire_options'] = isset($data['acquire_options']) ? $data['acquire_options'] : null;
        $this->container['bank_account'] = isset($data['bank_account']) ? $data['bank_account'] : null;
        $this->container['bank_account_owner'] = isset($data['bank_account_owner']) ? $data['bank_account_owner'] : null;
        $this->container['bank_bic'] = isset($data['bank_bic']) ? $data['bank_bic'] : null;
        $this->container['bank_code'] = isset($data['bank_code']) ? $data['bank_code'] : null;
        $this->container['bank_iban'] = isset($data['bank_iban']) ? $data['bank_iban'] : null;
        $this->container['bank_name'] = isset($data['bank_name']) ? $data['bank_name'] : null;
        $this->container['birth_date'] = isset($data['birth_date']) ? $data['birth_date'] : null;
        $this->container['cash_allowance'] = isset($data['cash_allowance']) ? $data['cash_allowance'] : null;
        $this->container['cash_allowance_days'] = isset($data['cash_allowance_days']) ? $data['cash_allowance_days'] : null;
        $this->container['cash_discount'] = isset($data['cash_discount']) ? $data['cash_discount'] : null;
        $this->container['cash_discount_type'] = isset($data['cash_discount_type']) ? $data['cash_discount_type'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['company_name'] = isset($data['company_name']) ? $data['company_name'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['delivery_city'] = isset($data['delivery_city']) ? $data['delivery_city'] : null;
        $this->container['delivery_company_name'] = isset($data['delivery_company_name']) ? $data['delivery_company_name'] : null;
        $this->container['delivery_country'] = isset($data['delivery_country']) ? $data['delivery_country'] : null;
        $this->container['delivery_first_name'] = isset($data['delivery_first_name']) ? $data['delivery_first_name'] : null;
        $this->container['delivery_last_name'] = isset($data['delivery_last_name']) ? $data['delivery_last_name'] : null;
        $this->container['delivery_personal'] = isset($data['delivery_personal']) ? $data['delivery_personal'] : null;
        $this->container['delivery_salutation'] = isset($data['delivery_salutation']) ? $data['delivery_salutation'] : null;
        $this->container['delivery_street'] = isset($data['delivery_street']) ? $data['delivery_street'] : null;
        $this->container['delivery_suffix_1'] = isset($data['delivery_suffix_1']) ? $data['delivery_suffix_1'] : null;
        $this->container['delivery_suffix_2'] = isset($data['delivery_suffix_2']) ? $data['delivery_suffix_2'] : null;
        $this->container['delivery_zip_code'] = isset($data['delivery_zip_code']) ? $data['delivery_zip_code'] : null;
        $this->container['emails'] = isset($data['emails']) ? $data['emails'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['grace_period'] = isset($data['grace_period']) ? $data['grace_period'] : null;
        $this->container['group_id'] = isset($data['group_id']) ? $data['group_id'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['info_1'] = isset($data['info_1']) ? $data['info_1'] : null;
        $this->container['info_2'] = isset($data['info_2']) ? $data['info_2'] : null;
        $this->container['internet'] = isset($data['internet']) ? $data['internet'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['login_id'] = isset($data['login_id']) ? $data['login_id'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['payment_options'] = isset($data['payment_options']) ? $data['payment_options'] : null;
        $this->container['personal'] = isset($data['personal']) ? $data['personal'] : null;
        $this->container['phone_1'] = isset($data['phone_1']) ? $data['phone_1'] : null;
        $this->container['phone_2'] = isset($data['phone_2']) ? $data['phone_2'] : null;
        $this->container['postbox'] = isset($data['postbox']) ? $data['postbox'] : null;
        $this->container['postbox_city'] = isset($data['postbox_city']) ? $data['postbox_city'] : null;
        $this->container['postbox_country'] = isset($data['postbox_country']) ? $data['postbox_country'] : null;
        $this->container['postbox_zip_code'] = isset($data['postbox_zip_code']) ? $data['postbox_zip_code'] : null;
        $this->container['sale_price_level'] = isset($data['sale_price_level']) ? $data['sale_price_level'] : null;
        $this->container['salutation'] = isset($data['salutation']) ? $data['salutation'] : null;
        $this->container['sepa_agreement'] = isset($data['sepa_agreement']) ? $data['sepa_agreement'] : null;
        $this->container['sepa_agreement_date'] = isset($data['sepa_agreement_date']) ? $data['sepa_agreement_date'] : null;
        $this->container['sepa_mandate_reference'] = isset($data['sepa_mandate_reference']) ? $data['sepa_mandate_reference'] : null;
        $this->container['since_date'] = isset($data['since_date']) ? $data['since_date'] : null;
        $this->container['street'] = isset($data['street']) ? $data['street'] : null;
        $this->container['suffix_1'] = isset($data['suffix_1']) ? $data['suffix_1'] : null;
        $this->container['suffix_2'] = isset($data['suffix_2']) ? $data['suffix_2'] : null;
        $this->container['tax_number'] = isset($data['tax_number']) ? $data['tax_number'] : null;
        $this->container['tax_options'] = isset($data['tax_options']) ? $data['tax_options'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['vat_identifier'] = isset($data['vat_identifier']) ? $data['vat_identifier'] : null;
        $this->container['zip_code'] = isset($data['zip_code']) ? $data['zip_code'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        $allowed_values = $this->getCashDiscountTypeAllowableValues();
        if (!in_array($this->container['cash_discount_type'], $allowed_values)) {
            $invalid_properties[] = sprintf(
                "invalid value for 'cash_discount_type', must be one of '%s'",
                implode("', '", $allowed_values)
            );
        }

        if ($this->container['company_name'] === null) {
            $invalid_properties[] = "'company_name' can't be null";
        }
        if ($this->container['last_name'] === null) {
            $invalid_properties[] = "'last_name' can't be null";
        }
        $allowed_values = $this->getSepaAgreementAllowableValues();
        if (!in_array($this->container['sepa_agreement'], $allowed_values)) {
            $invalid_properties[] = sprintf(
                "invalid value for 'sepa_agreement', must be one of '%s'",
                implode("', '", $allowed_values)
            );
        }

        $allowed_values = $this->getTaxOptionsAllowableValues();
        if (!in_array($this->container['tax_options'], $allowed_values)) {
            $invalid_properties[] = sprintf(
                "invalid value for 'tax_options', must be one of '%s'",
                implode("', '", $allowed_values)
            );
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        $allowed_values = $this->getCashDiscountTypeAllowableValues();
        if (!in_array($this->container['cash_discount_type'], $allowed_values)) {
            return false;
        }
        if ($this->container['company_name'] === null) {
            return false;
        }
        if ($this->container['last_name'] === null) {
            return false;
        }
        $allowed_values = $this->getSepaAgreementAllowableValues();
        if (!in_array($this->container['sepa_agreement'], $allowed_values)) {
            return false;
        }
        $allowed_values = $this->getTaxOptionsAllowableValues();
        if (!in_array($this->container['tax_options'], $allowed_values)) {
            return false;
        }
        return true;
    }


    /**
     * Gets acquire_options
     * @return int
     */
    public function getAcquireOptions()
    {
        return $this->container['acquire_options'];
    }

    /**
     * Sets acquire_options
     * @param int $acquire_options 1: Empfehlung eines anderen Kunden, 2: Zeitungsanzeige, 3: ...
     * @return $this
     */
    public function setAcquireOptions($acquire_options)
    {
        $this->container['acquire_options'] = $acquire_options;

        return $this;
    }

    /**
     * Gets bank_account
     * @return string
     */
    public function getBankAccount()
    {
        return $this->container['bank_account'];
    }

    /**
     * Sets bank_account
     * @param string $bank_account
     * @return $this
     */
    public function setBankAccount($bank_account)
    {
        $this->container['bank_account'] = $bank_account;

        return $this;
    }

    /**
     * Gets bank_account_owner
     * @return string
     */
    public function getBankAccountOwner()
    {
        return $this->container['bank_account_owner'];
    }

    /**
     * Sets bank_account_owner
     * @param string $bank_account_owner
     * @return $this
     */
    public function setBankAccountOwner($bank_account_owner)
    {
        $this->container['bank_account_owner'] = $bank_account_owner;

        return $this;
    }

    /**
     * Gets bank_bic
     * @return string
     */
    public function getBankBic()
    {
        return $this->container['bank_bic'];
    }

    /**
     * Sets bank_bic
     * @param string $bank_bic
     * @return $this
     */
    public function setBankBic($bank_bic)
    {
        $this->container['bank_bic'] = $bank_bic;

        return $this;
    }

    /**
     * Gets bank_code
     * @return string
     */
    public function getBankCode()
    {
        return $this->container['bank_code'];
    }

    /**
     * Sets bank_code
     * @param string $bank_code
     * @return $this
     */
    public function setBankCode($bank_code)
    {
        $this->container['bank_code'] = $bank_code;

        return $this;
    }

    /**
     * Gets bank_iban
     * @return string
     */
    public function getBankIban()
    {
        return $this->container['bank_iban'];
    }

    /**
     * Sets bank_iban
     * @param string $bank_iban
     * @return $this
     */
    public function setBankIban($bank_iban)
    {
        $this->container['bank_iban'] = $bank_iban;

        return $this;
    }

    /**
     * Gets bank_name
     * @return string
     */
    public function getBankName()
    {
        return $this->container['bank_name'];
    }

    /**
     * Sets bank_name
     * @param string $bank_name
     * @return $this
     */
    public function setBankName($bank_name)
    {
        $this->container['bank_name'] = $bank_name;

        return $this;
    }

    /**
     * Gets birth_date
     * @return \DateTime
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     * @param \DateTime $birth_date
     * @return $this
     */
    public function setBirthDate($birth_date)
    {
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets cash_allowance
     * @return float
     */
    public function getCashAllowance()
    {
        return $this->container['cash_allowance'];
    }

    /**
     * Sets cash_allowance
     * @param float $cash_allowance
     * @return $this
     */
    public function setCashAllowance($cash_allowance)
    {
        $this->container['cash_allowance'] = $cash_allowance;

        return $this;
    }

    /**
     * Gets cash_allowance_days
     * @return int
     */
    public function getCashAllowanceDays()
    {
        return $this->container['cash_allowance_days'];
    }

    /**
     * Sets cash_allowance_days
     * @param int $cash_allowance_days
     * @return $this
     */
    public function setCashAllowanceDays($cash_allowance_days)
    {
        $this->container['cash_allowance_days'] = $cash_allowance_days;

        return $this;
    }

    /**
     * Gets cash_discount
     * @return float
     */
    public function getCashDiscount()
    {
        return $this->container['cash_discount'];
    }

    /**
     * Sets cash_discount
     * @param float $cash_discount
     * @return $this
     */
    public function setCashDiscount($cash_discount)
    {
        $this->container['cash_discount'] = $cash_discount;

        return $this;
    }

    /**
     * Gets cash_discount_type
     * @return string
     */
    public function getCashDiscountType()
    {
        return $this->container['cash_discount_type'];
    }

    /**
     * Sets cash_discount_type
     * @param string $cash_discount_type
     * @return $this
     */
    public function setCashDiscountType($cash_discount_type)
    {
        $allowed_values = $this->getCashDiscountTypeAllowableValues();
        if (!is_null($cash_discount_type) && !in_array($cash_discount_type, $allowed_values)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'cash_discount_type', must be one of '%s'",
                    implode("', '", $allowed_values)
                )
            );
        }
        $this->container['cash_discount_type'] = $cash_discount_type;

        return $this;
    }

    /**
     * Gets city
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     * @param string $city
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets company_name
     * @return string
     */
    public function getCompanyName()
    {
        return $this->container['company_name'];
    }

    /**
     * Sets company_name
     * @param string $company_name
     * @return $this
     */
    public function setCompanyName($company_name)
    {
        $this->container['company_name'] = $company_name;

        return $this;
    }

    /**
     * Gets country
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     * @param string $country Country code. Example: Germany = DE.
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets created_at
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     * @param \DateTime $created_at
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets delivery_city
     * @return string
     */
    public function getDeliveryCity()
    {
        return $this->container['delivery_city'];
    }

    /**
     * Sets delivery_city
     * @param string $delivery_city
     * @return $this
     */
    public function setDeliveryCity($delivery_city)
    {
        $this->container['delivery_city'] = $delivery_city;

        return $this;
    }

    /**
     * Gets delivery_company_name
     * @return string
     */
    public function getDeliveryCompanyName()
    {
        return $this->container['delivery_company_name'];
    }

    /**
     * Sets delivery_company_name
     * @param string $delivery_company_name
     * @return $this
     */
    public function setDeliveryCompanyName($delivery_company_name)
    {
        $this->container['delivery_company_name'] = $delivery_company_name;

        return $this;
    }

    /**
     * Gets delivery_country
     * @return string
     */
    public function getDeliveryCountry()
    {
        return $this->container['delivery_country'];
    }

    /**
     * Sets delivery_country
     * @param string $delivery_country Country code. Example: Germany = DE.
     * @return $this
     */
    public function setDeliveryCountry($delivery_country)
    {
        $this->container['delivery_country'] = $delivery_country;

        return $this;
    }

    /**
     * Gets delivery_first_name
     * @return string
     */
    public function getDeliveryFirstName()
    {
        return $this->container['delivery_first_name'];
    }

    /**
     * Sets delivery_first_name
     * @param string $delivery_first_name
     * @return $this
     */
    public function setDeliveryFirstName($delivery_first_name)
    {
        $this->container['delivery_first_name'] = $delivery_first_name;

        return $this;
    }

    /**
     * Gets delivery_last_name
     * @return string
     */
    public function getDeliveryLastName()
    {
        return $this->container['delivery_last_name'];
    }

    /**
     * Sets delivery_last_name
     * @param string $delivery_last_name
     * @return $this
     */
    public function setDeliveryLastName($delivery_last_name)
    {
        $this->container['delivery_last_name'] = $delivery_last_name;

        return $this;
    }

    /**
     * Gets delivery_personal
     * @return bool
     */
    public function getDeliveryPersonal()
    {
        return $this->container['delivery_personal'];
    }

    /**
     * Sets delivery_personal
     * @param bool $delivery_personal
     * @return $this
     */
    public function setDeliveryPersonal($delivery_personal)
    {
        $this->container['delivery_personal'] = $delivery_personal;

        return $this;
    }

    /**
     * Gets delivery_salutation
     * @return int
     */
    public function getDeliverySalutation()
    {
        return $this->container['delivery_salutation'];
    }

    /**
     * Sets delivery_salutation
     * @param int $delivery_salutation 0 = nothing, 1 = Mr, 2 = Mrs, 3 = Company, 4 = Mr & Mrs, 5 = Married couple, 6 = Family
     * @return $this
     */
    public function setDeliverySalutation($delivery_salutation)
    {
        $this->container['delivery_salutation'] = $delivery_salutation;

        return $this;
    }

    /**
     * Gets delivery_street
     * @return string
     */
    public function getDeliveryStreet()
    {
        return $this->container['delivery_street'];
    }

    /**
     * Sets delivery_street
     * @param string $delivery_street
     * @return $this
     */
    public function setDeliveryStreet($delivery_street)
    {
        $this->container['delivery_street'] = $delivery_street;

        return $this;
    }

    /**
     * Gets delivery_suffix_1
     * @return string
     */
    public function getDeliverySuffix1()
    {
        return $this->container['delivery_suffix_1'];
    }

    /**
     * Sets delivery_suffix_1
     * @param string $delivery_suffix_1
     * @return $this
     */
    public function setDeliverySuffix1($delivery_suffix_1)
    {
        $this->container['delivery_suffix_1'] = $delivery_suffix_1;

        return $this;
    }

    /**
     * Gets delivery_suffix_2
     * @return string
     */
    public function getDeliverySuffix2()
    {
        return $this->container['delivery_suffix_2'];
    }

    /**
     * Sets delivery_suffix_2
     * @param string $delivery_suffix_2
     * @return $this
     */
    public function setDeliverySuffix2($delivery_suffix_2)
    {
        $this->container['delivery_suffix_2'] = $delivery_suffix_2;

        return $this;
    }

    /**
     * Gets delivery_zip_code
     * @return string
     */
    public function getDeliveryZipCode()
    {
        return $this->container['delivery_zip_code'];
    }

    /**
     * Sets delivery_zip_code
     * @param string $delivery_zip_code
     * @return $this
     */
    public function setDeliveryZipCode($delivery_zip_code)
    {
        $this->container['delivery_zip_code'] = $delivery_zip_code;

        return $this;
    }

    /**
     * Gets emails
     * @return string[]
     */
    public function getEmails()
    {
        return $this->container['emails'];
    }

    /**
     * Sets emails
     * @param string[] $emails
     * @return $this
     */
    public function setEmails($emails)
    {
        $this->container['emails'] = $emails;

        return $this;
    }

    /**
     * Gets fax
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     * @param string $fax
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets first_name
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     * @param string $first_name
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets grace_period
     * @return string
     */
    public function getGracePeriod()
    {
        return $this->container['grace_period'];
    }

    /**
     * Sets grace_period
     * @param string $grace_period
     * @return $this
     */
    public function setGracePeriod($grace_period)
    {
        $this->container['grace_period'] = $grace_period;

        return $this;
    }

    /**
     * Gets group_id
     * @return int
     */
    public function getGroupId()
    {
        return $this->container['group_id'];
    }

    /**
     * Sets group_id
     * @param int $group_id
     * @return $this
     */
    public function setGroupId($group_id)
    {
        $this->container['group_id'] = $group_id;

        return $this;
    }

    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets info_1
     * @return string
     */
    public function getInfo1()
    {
        return $this->container['info_1'];
    }

    /**
     * Sets info_1
     * @param string $info_1
     * @return $this
     */
    public function setInfo1($info_1)
    {
        $this->container['info_1'] = $info_1;

        return $this;
    }

    /**
     * Gets info_2
     * @return string
     */
    public function getInfo2()
    {
        return $this->container['info_2'];
    }

    /**
     * Sets info_2
     * @param string $info_2
     * @return $this
     */
    public function setInfo2($info_2)
    {
        $this->container['info_2'] = $info_2;

        return $this;
    }

    /**
     * Gets internet
     * @return string
     */
    public function getInternet()
    {
        return $this->container['internet'];
    }

    /**
     * Sets internet
     * @param string $internet
     * @return $this
     */
    public function setInternet($internet)
    {
        $this->container['internet'] = $internet;

        return $this;
    }

    /**
     * Gets last_name
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     * @param string $last_name
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets login_id
     * @return int
     */
    public function getLoginId()
    {
        return $this->container['login_id'];
    }

    /**
     * Sets login_id
     * @param int $login_id
     * @return $this
     */
    public function setLoginId($login_id)
    {
        $this->container['login_id'] = $login_id;

        return $this;
    }

    /**
     * Gets mobile
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     * @param string $mobile
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets note
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     * @param string $note
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets number
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     * @param string $number
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets payment_options
     * @return int
     */
    public function getPaymentOptions()
    {
        return $this->container['payment_options'];
    }

    /**
     * Sets payment_options
     * @param int $payment_options 1 = Stets pünktliche Zahlung, 2 = überwiegend pünktliche Zahlung, 3 = überwiegend verspätete Zahlung, 5 = Grundsätzlich verspätete Zahlung
     * @return $this
     */
    public function setPaymentOptions($payment_options)
    {
        $this->container['payment_options'] = $payment_options;

        return $this;
    }

    /**
     * Gets personal
     * @return bool
     */
    public function getPersonal()
    {
        return $this->container['personal'];
    }

    /**
     * Sets personal
     * @param bool $personal
     * @return $this
     */
    public function setPersonal($personal)
    {
        $this->container['personal'] = $personal;

        return $this;
    }

    /**
     * Gets phone_1
     * @return string
     */
    public function getPhone1()
    {
        return $this->container['phone_1'];
    }

    /**
     * Sets phone_1
     * @param string $phone_1
     * @return $this
     */
    public function setPhone1($phone_1)
    {
        $this->container['phone_1'] = $phone_1;

        return $this;
    }

    /**
     * Gets phone_2
     * @return string
     */
    public function getPhone2()
    {
        return $this->container['phone_2'];
    }

    /**
     * Sets phone_2
     * @param string $phone_2
     * @return $this
     */
    public function setPhone2($phone_2)
    {
        $this->container['phone_2'] = $phone_2;

        return $this;
    }

    /**
     * Gets postbox
     * @return string
     */
    public function getPostbox()
    {
        return $this->container['postbox'];
    }

    /**
     * Sets postbox
     * @param string $postbox
     * @return $this
     */
    public function setPostbox($postbox)
    {
        $this->container['postbox'] = $postbox;

        return $this;
    }

    /**
     * Gets postbox_city
     * @return string
     */
    public function getPostboxCity()
    {
        return $this->container['postbox_city'];
    }

    /**
     * Sets postbox_city
     * @param string $postbox_city
     * @return $this
     */
    public function setPostboxCity($postbox_city)
    {
        $this->container['postbox_city'] = $postbox_city;

        return $this;
    }

    /**
     * Gets postbox_country
     * @return string
     */
    public function getPostboxCountry()
    {
        return $this->container['postbox_country'];
    }

    /**
     * Sets postbox_country
     * @param string $postbox_country
     * @return $this
     */
    public function setPostboxCountry($postbox_country)
    {
        $this->container['postbox_country'] = $postbox_country;

        return $this;
    }

    /**
     * Gets postbox_zip_code
     * @return string
     */
    public function getPostboxZipCode()
    {
        return $this->container['postbox_zip_code'];
    }

    /**
     * Sets postbox_zip_code
     * @param string $postbox_zip_code
     * @return $this
     */
    public function setPostboxZipCode($postbox_zip_code)
    {
        $this->container['postbox_zip_code'] = $postbox_zip_code;

        return $this;
    }

    /**
     * Gets sale_price_level
     * @return string
     */
    public function getSalePriceLevel()
    {
        return $this->container['sale_price_level'];
    }

    /**
     * Sets sale_price_level
     * @param string $sale_price_level
     * @return $this
     */
    public function setSalePriceLevel($sale_price_level)
    {
        $this->container['sale_price_level'] = $sale_price_level;

        return $this;
    }

    /**
     * Gets salutation
     * @return int
     */
    public function getSalutation()
    {
        return $this->container['salutation'];
    }

    /**
     * Sets salutation
     * @param int $salutation 0 = nothing, 1 = Mr, 2 = Mrs, 3 = Company, 4 = Mr & Mrs, 5 = Married couple, 6 = Family
     * @return $this
     */
    public function setSalutation($salutation)
    {
        $this->container['salutation'] = $salutation;

        return $this;
    }

    /**
     * Gets sepa_agreement
     * @return string
     */
    public function getSepaAgreement()
    {
        return $this->container['sepa_agreement'];
    }

    /**
     * Sets sepa_agreement
     * @param string $sepa_agreement BASIC = SEPA-Basislastschrift, COR1 = SEPA-Basislastschrift COR1, COMPANY = SEPA-Firmenlastschrift, NULL = Noch kein Mandat erteilt
     * @return $this
     */
    public function setSepaAgreement($sepa_agreement)
    {
        $allowed_values = $this->getSepaAgreementAllowableValues();
        if (!is_null($sepa_agreement) && !in_array($sepa_agreement, $allowed_values)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'sepa_agreement', must be one of '%s'",
                    implode("', '", $allowed_values)
                )
            );
        }
        $this->container['sepa_agreement'] = $sepa_agreement;

        return $this;
    }

    /**
     * Gets sepa_agreement_date
     * @return \DateTime
     */
    public function getSepaAgreementDate()
    {
        return $this->container['sepa_agreement_date'];
    }

    /**
     * Sets sepa_agreement_date
     * @param \DateTime $sepa_agreement_date
     * @return $this
     */
    public function setSepaAgreementDate($sepa_agreement_date)
    {
        $this->container['sepa_agreement_date'] = $sepa_agreement_date;

        return $this;
    }

    /**
     * Gets sepa_mandate_reference
     * @return string
     */
    public function getSepaMandateReference()
    {
        return $this->container['sepa_mandate_reference'];
    }

    /**
     * Sets sepa_mandate_reference
     * @param string $sepa_mandate_reference
     * @return $this
     */
    public function setSepaMandateReference($sepa_mandate_reference)
    {
        $this->container['sepa_mandate_reference'] = $sepa_mandate_reference;

        return $this;
    }

    /**
     * Gets since_date
     * @return \DateTime
     */
    public function getSinceDate()
    {
        return $this->container['since_date'];
    }

    /**
     * Sets since_date
     * @param \DateTime $since_date
     * @return $this
     */
    public function setSinceDate($since_date)
    {
        $this->container['since_date'] = $since_date;

        return $this;
    }

    /**
     * Gets street
     * @return string
     */
    public function getStreet()
    {
        return $this->container['street'];
    }

    /**
     * Sets street
     * @param string $street
     * @return $this
     */
    public function setStreet($street)
    {
        $this->container['street'] = $street;

        return $this;
    }

    /**
     * Gets suffix_1
     * @return string
     */
    public function getSuffix1()
    {
        return $this->container['suffix_1'];
    }

    /**
     * Sets suffix_1
     * @param string $suffix_1
     * @return $this
     */
    public function setSuffix1($suffix_1)
    {
        $this->container['suffix_1'] = $suffix_1;

        return $this;
    }

    /**
     * Gets suffix_2
     * @return string
     */
    public function getSuffix2()
    {
        return $this->container['suffix_2'];
    }

    /**
     * Sets suffix_2
     * @param string $suffix_2
     * @return $this
     */
    public function setSuffix2($suffix_2)
    {
        $this->container['suffix_2'] = $suffix_2;

        return $this;
    }

    /**
     * Gets tax_number
     * @return string
     */
    public function getTaxNumber()
    {
        return $this->container['tax_number'];
    }

    /**
     * Sets tax_number
     * @param string $tax_number
     * @return $this
     */
    public function setTaxNumber($tax_number)
    {
        $this->container['tax_number'] = $tax_number;

        return $this;
    }

    /**
     * Gets tax_options
     * @return string
     */
    public function getTaxOptions()
    {
        return $this->container['tax_options'];
    }

    /**
     * Sets tax_options
     * @param string $tax_options nStb = Nicht steuerbar (Drittland), nStbUstID = Nicht steuerbar (EU mit UStID-Nr.), nStbNoneUstID = Nicht steuerbar (EU ohne UStID-Nr.), revc = Steuerschuldwechsel §13b (Inland), IG = Innergemeinschaftliche Lieferung, AL = Ausfuhrlieferung, sStfr = sonstige Steuerbefreiung, NULL = Umsatzsteuerpflichtig
     * @return $this
     */
    public function setTaxOptions($tax_options)
    {
        $allowed_values = $this->getTaxOptionsAllowableValues();
        if (!is_null($tax_options) && !in_array($tax_options, $allowed_values)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'tax_options', must be one of '%s'",
                    implode("', '", $allowed_values)
                )
            );
        }
        $this->container['tax_options'] = $tax_options;

        return $this;
    }

    /**
     * Gets title
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     * @param string $title
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets vat_identifier
     * @return string
     */
    public function getVatIdentifier()
    {
        return $this->container['vat_identifier'];
    }

    /**
     * Sets vat_identifier
     * @param string $vat_identifier
     * @return $this
     */
    public function setVatIdentifier($vat_identifier)
    {
        $this->container['vat_identifier'] = $vat_identifier;

        return $this;
    }

    /**
     * Gets zip_code
     * @return string
     */
    public function getZipCode()
    {
        return $this->container['zip_code'];
    }

    /**
     * Sets zip_code
     * @param string $zip_code
     * @return $this
     */
    public function setZipCode($zip_code)
    {
        $this->container['zip_code'] = $zip_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
    }
}


